---
import ExperienceCard from '../components/ExperienceCard.astro';
import BaseLayout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const experiences = await getCollection('experience');
const educationEntries = await getCollection('education');
const skillsData = (await getCollection('skills'))[0].data;
---

<BaseLayout title="Bunyawat Naunnak - Backend Engineer">
  <!-- Toggle Button -->
  <div class="flex justify-end mb-4">
    <button id="theme-toggle" class="flex items-center gap-2 px-4 py-2 text-sm rounded-lg border border-gray-300 dark:border-gray-600 text-gray-800 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors">
      <svg id="theme-icon" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m8.66-11.66l-.71.71M4.05 19.95l-.71-.71M21 12h-1M4 12H3m16.66 4.66l-.71-.71M4.05 4.05l-.71.71M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
      </svg>
      Toggle Theme
    </button>
  </div>

  <!-- Header Section -->
  <header class="text-center mb-12">
    <h1 class="text-4xl font-bold mb-2 text-gray-900 dark:text-white">BUNYAWAT NAUNNAK</h1>
    <h2 class="text-xl text-gray-700 dark:text-gray-300 mb-4">Back-end Developer</h2>
    <p class="text-gray-600 dark:text-gray-400 mb-6 max-w-xl mx-auto">I specialize in building reliable, scalable back-end systems using Go, Node.js, and modern cloud technologies. Passionate about performance, clean APIs, and DevOps culture.</p>
    <div class="flex justify-center space-x-6">
      <a href="mailto:bunyawatnaunnak@gmail.com" class="text-gray-600 dark:text-gray-300 hover:text-blue-600 transition-colors">Email</a>
      <a href="https://github.com/bunnybunbun37204" target="_blank" class="text-gray-600 dark:text-gray-300 hover:text-blue-600 transition-colors">GitHub</a>
    </div>
  </header>

  <!-- Projects Section -->
  <section class="mb-12">
    <h2 class="text-2xl font-bold mb-4 border-b-2 border-blue-600 pb-2 dark:text-white">Projects</h2>
    <div class="space-y-8">
      {experiences.map(exp => (
        <a href={exp.data.repo} target="_blank" class="block rounded-xl hover:bg-blue-50 dark:hover:bg-gray-800 transition-colors p-4 group">
          <h3 class="text-xl font-semibold text-gray-900 dark:text-white group-hover:underline">{exp.data.title} â€” <span class="text-blue-600 dark:text-blue-400">{exp.data.company}</span></h3>
          <p class="text-sm text-gray-500 dark:text-gray-400 mb-2">{exp.data.date}</p>
          <ul class="list-disc pl-5 text-gray-700 dark:text-gray-300 space-y-1">
            {exp.data.items.map(item => (<li>{item}</li>))}
          </ul>
        </a>
      ))}
    </div>
  </section>

  <!-- Skills Section -->
  <section class="mb-12">
    <h2 class="text-2xl font-bold mb-4 border-b-2 border-blue-600 pb-2 dark:text-white">Tech Stack</h2>
    <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
      {Object.entries(skillsData.categories).map(([category, skills]) => (
        skills.map(skill => (
          <div class="bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100 p-3 rounded-lg text-center text-sm font-medium hover:bg-blue-100 dark:hover:bg-gray-700 transition-colors">
            {skill}
          </div>
        ))
      ))}
    </div>
  </section>

  <!-- Education Section -->
  <section class="mb-12">
    <h2 class="text-2xl font-bold mb-4 border-b-2 border-blue-600 pb-2 dark:text-white">Education</h2>
    <div class="space-y-4">
      {educationEntries.map(edu => (
        <div class="bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border border-gray-200 dark:border-gray-700">
          <h3 class="font-bold text-gray-900 dark:text-white">{edu.data.institution}</h3>
          <p class="text-gray-700 dark:text-gray-300">{edu.data.degree}</p>
          <p class="text-gray-500 dark:text-gray-400 text-sm mt-1">{edu.data.date}</p>
        </div>
      ))}
    </div>
  </section>

  <script is:inline>
    const root = document.documentElement;
    const themeToggle = document.getElementById('theme-toggle');
    const themeIcon = document.getElementById('theme-icon');

    function applyTheme(theme) {
      if (theme === 'dark') {
        root.classList.add('dark');
        themeIcon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.293 14.707a8 8 0 01-11.314-11.314 8.001 8.001 0 0011.314 11.314z" />`;
      } else {
        root.classList.remove('dark');
        themeIcon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m8.66-11.66l-.71.71M4.05 19.95l-.71-.71M21 12h-1M4 12H3m16.66 4.66l-.71-.71M4.05 4.05l-.71.71M16 12a4 4 0 11-8 0 4 4 0 018 0z" />`;
      }
    }

    const storedTheme = localStorage.theme;
    if (storedTheme) applyTheme(storedTheme);

    themeToggle.addEventListener('click', () => {
      const newTheme = root.classList.contains('dark') ? 'light' : 'dark';
      localStorage.theme = newTheme;
      applyTheme(newTheme);
    });
  </script>
</BaseLayout>