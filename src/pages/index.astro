---
import BaseLayout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

const experiences = await getCollection("experience");
const educationEntries = await getCollection("education");
const skillsData = (await getCollection("skills"))[0].data;
---

<BaseLayout title="Bunyawat Naunnak - Backend Engineer">
  <!-- Floating Theme Toggle -->
  <button
    id="theme-toggle"
    class="fixed top-4 right-4 z-50 p-2.5 rounded-full bg-white/80 shadow-md backdrop-blur-sm dark:bg-gray-800/80 hover:scale-[1.03] transition-transform"
    title="Toggle theme"
    aria-label="Toggle dark mode"
  >
    <svg
      id="theme-icon"
      class="w-6 h-6 text-gray-800 dark:text-gray-200"
      fill="none"
      viewBox="0 0 24 24"
    >
      <path
        class="hidden dark:block"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="1.5"
        d="M12 5V3m4.293 4.707l1.414-1.414M19 12h2m-4.293 4.707l1.414 1.414M12 19v2m-4.293-4.707l-1.414 1.414M5 12H3m4.293-4.707L5.88 5.886"
      ></path>
      <path
        class="dark:hidden"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="1.5"
        d="M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z"></path>
    </svg>
  </button>

  <!-- Navigation -->
  <nav
    class="fixed top-0 left-0 w-full bg-white/90 dark:bg-gray-900/90 backdrop-blur-md z-40 transition-all shadow-sm"
  >
    <div class="max-w-5xl mx-auto px-4">
      <div class="flex justify-between items-center h-16">
        <a href="#" class="font-bold text-blue-600 dark:text-blue-400">BN</a>
        <ul class="hidden md:flex space-x-8">
          <li>
            <a
              href="#about"
              class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
              >About</a>
          </li>
          <li>
            <a
              href="#experience"
              class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
              >Experience</a>
          </li>
          <li>
            <a
              href="#skills"
              class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
              >Skills</a>
          </li>
          <li>
            <a
              href="#education"
              class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
              >Education</a>
          </li>
        </ul>
        <button
          class="md:hidden"
          id="mobile-menu-button"
          aria-label="Toggle menu"
        >
          <svg
            class="w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              class="mobile-menu-icon"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>
    <!-- Mobile menu -->
    <div class="md:hidden hidden transition-all" id="mobile-menu">
      <div class="px-2 pt-2 pb-3 space-y-1">
        <a
          href="#about"
          class="block px-3 py-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800"
          >About</a
        >
        <a
          href="#experience"
          class="block px-3 py-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800"
          >Experience</a
        >
        <a
          href="#skills"
          class="block px-3 py-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800"
          >Skills</a
        >
        <a
          href="#education"
          class="block px-3 py-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800"
          >Education</a
        >
      </div>
    </div>
  </nav>

  <!-- Header Section -->
  <header class="text-center pt-32 pb-16" id="about">
    <div class="max-w-4xl mx-auto px-4">
      <div class="mb-8 relative inline-block">
        <div
          class="w-32 h-32 rounded-full overflow-hidden border-4 border-white dark:border-gray-800 shadow-lg mx-auto"
        >
          <img
            src="/api/placeholder/128/128"
            alt="Bunyawat Naunnak"
            class="w-full h-full object-cover"
          />
        </div>
        <div
          class="absolute bottom-0 right-0 bg-blue-600 text-white p-2 rounded-full shadow-md"
        >
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
            <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
            <path
              fill-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 00-2 0v2a1 1 0 002 0V5zm-1 10a5 5 0 100-10 5 5 0 000 10z"
              clip-rule="evenodd"></path>
          </svg>
        </div>
      </div>
      <h1
        class="text-5xl font-bold mb-4 bg-gradient-to-r from-blue-600 to-cyan-500 bg-clip-text text-transparent"
      >
        BUNYAWAT NAUNNAK
      </h1>
      <div class="flex justify-center items-center gap-4 mb-6">
        <span
          class="bg-blue-100 dark:bg-gray-700 text-blue-600 dark:text-blue-300 px-4 py-1 rounded-full text-lg font-medium"
        >
          Back-end Developer
        </span>
      </div>
      <p
        class="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto mb-8"
      >
        Passionate backend engineer with expertise in building robust, scalable
        solutions. Focused on creating efficient APIs and server architectures
        that power modern applications.
      </p>
      <div class="flex justify-center gap-4">
        <a
          href="mailto:bunyawatnaunnak@gmail.com"
          class="flex items-center gap-2 px-4 py-2 bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-lg transition-colors"
        >
          <svg
            class="w-5 h-5 text-gray-700 dark:text-gray-300"
            fill="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              d="M20 4H4a2 2 0 00-2 2v12a2 2 0 002 2h16a2 2 0 002-2V6a2 2 0 00-2-2zm0 4.7l-8 5.3-8-5.3V6.3l8 5.3 8-5.3V8.7z"
            ></path>
          </svg>
          <span class="text-gray-700 dark:text-gray-300">Email Me</span>
        </a>
        <a
          href="https://github.com/bunnybunbun37204"
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors"
        >
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
            <path
              d="M12 2A10 10 0 002 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.07.63-1.31-2.2-.25-4.52-1.11-4.52-4.96 0-1.1.39-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.8-.22 1.65-.33 2.5-.33s1.7.11 2.5.33c1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.64.71 1.03 1.6 1.03 2.71 0 3.85-2.34 4.68-4.57 4.93.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0012 2z"
            ></path>
          </svg>
          <span>GitHub</span>
        </a>
      </div>
    </div>
  </header>

  <!-- Experience Section - Completely Redesigned -->
  <section id="experience" class="py-20 bg-gray-50 dark:bg-gray-800/50">
    <div class="max-w-4xl mx-auto px-4">
      <div class="flex items-center gap-4 mb-12">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">
          Experience & Projects
        </h2>
        <div
          class="flex-1 h-px bg-gradient-to-r from-blue-600/30 to-transparent"
        >
        </div>
      </div>

      <div class="space-y-12">
        {
          experiences.map((exp, index) => (
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm overflow-hidden border border-gray-200 dark:border-gray-700 hover:shadow-md transition-shadow">
              <div class="md:flex">
                <div class="md:w-1/3 bg-blue-50 dark:bg-gray-700/50 p-6 flex flex-col justify-between">
                  <div>
                    <h3 class="text-xl font-bold text-gray-900 dark:text-white">
                      {exp.data.title}
                    </h3>
                    <div class="mt-2 inline-block bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 px-3 py-1 rounded-full text-sm font-medium">
                      {exp.data.company}
                    </div>
                    <p class="mt-4 text-gray-600 dark:text-gray-400">
                      {exp.data.date}
                    </p>
                  </div>

                  {exp.data.repo && (
                    <a
                      href={exp.data.repo}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="mt-4 inline-flex items-center text-blue-600 dark:text-blue-400 hover:underline group"
                    >
                      <svg
                        class="w-5 h-5 mr-2"
                        fill="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path d="M12 2C6.477 2 2 6.477 2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.07.63-1.31-2.2-.25-4.52-1.11-4.52-4.96 0-1.1.39-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.8-.22 1.65-.33 2.5-.33s1.7.11 2.5.33c1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.64.71 1.03 1.6 1.03 2.71 0 3.85-2.34 4.68-4.57 4.93.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0012 2z" />
                      </svg>
                      View Repository
                      <svg
                        class="w-4 h-4 ml-1 transform group-hover:translate-x-1 transition-transform"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M14 5l7 7m0 0l-7 7m7-7H3"
                        />
                      </svg>
                    </a>
                  )}
                </div>

                <div class="md:w-2/3 p-6">
                  <h4 class="text-lg font-medium text-blue-600 dark:text-blue-400 mb-4">
                    Key Contributions
                  </h4>
                  <ul class="space-y-3">
                    {exp.data.items.map((item) => (
                      <li class="flex items-start">
                        <div class="flex-shrink-0 w-5 h-5 mt-1 rounded-full bg-blue-100 dark:bg-blue-900/30 flex items-center justify-center">
                          <svg
                            class="w-3 h-3 text-blue-600 dark:text-blue-400"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                          >
                            <path
                              fill-rule="evenodd"
                              d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                              clip-rule="evenodd"
                            />
                          </svg>
                        </div>
                        <span class="ml-3 text-gray-700 dark:text-gray-300">
                          {item}
                        </span>
                      </li>
                    ))}
                  </ul>

                  {index === 0 && (
                    <div class="mt-6 flex flex-wrap gap-2">
                      <span class="px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full text-sm">
                        Node.js
                      </span>
                      <span class="px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full text-sm">
                        TypeScript
                      </span>
                      <span class="px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full text-sm">
                        Docker
                      </span>
                    </div>
                  )}
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <!-- Skills Section - Enhanced -->
  <section id="skills" class="py-20">
    <div class="max-w-4xl mx-auto px-4">
      <div class="flex items-center gap-4 mb-12">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">
          Technical Skills
        </h2>
        <div
          class="flex-1 h-px bg-gradient-to-r from-blue-600/30 to-transparent"
        >
        </div>
      </div>
      <div class="grid gap-6 sm:grid-cols-2">
        {
          Object.entries(skillsData.categories).map(([category, skills]) => (
            <div class="p-6 rounded-lg bg-white dark:bg-gray-800 shadow-sm border border-gray-100 dark:border-gray-700">
              <div class="flex items-center mb-4">
                <div class="w-10 h-10 rounded-full bg-blue-100 dark:bg-blue-900/30 flex items-center justify-center mr-3">
                  {category === "Languages" && (
                    <svg
                      class="w-5 h-5 text-blue-600 dark:text-blue-400"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path
                        fill-rule="evenodd"
                        d="M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z"
                        clip-rule="evenodd"
                      />
                    </svg>
                  )}
                  {category === "Frameworks" && (
                    <svg
                      class="w-5 h-5 text-blue-600 dark:text-blue-400"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path
                        fill-rule="evenodd"
                        d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zm0 6a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1v-2zm0 6a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1v-2z"
                        clip-rule="evenodd"
                      />
                    </svg>
                  )}
                  {category === "Tools" && (
                    <svg
                      class="w-5 h-5 text-blue-600 dark:text-blue-400"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path
                        fill-rule="evenodd"
                        d="M6.672 1.911a1 1 0 10-1.932.518l.259.966a1 1 0 001.932-.518l-.26-.966zM2.429 4.74a1 1 0 10-.517 1.932l.966.259a1 1 0 00.517-1.932l-.966-.26zm8.814-.569a1 1 0 00-1.415-1.414l-.707.707a1 1 0 101.415 1.415l.707-.708zm-7.071 7.072l.707-.707A1 1 0 003.465 9.12l-.708.707a1 1 0 001.415 1.415zm3.2-5.171a1 1 0 00-1.3 1.3l4 10a1 1 0 001.823.075l1.38-2.759 3.018 3.02a1 1 0 001.414-1.415l-3.019-3.02 2.76-1.379a1 1 0 00-.076-1.822l-10-4z"
                        clip-rule="evenodd"
                      />
                    </svg>
                  )}
                  {category === "Databases" && (
                    <svg
                      class="w-5 h-5 text-blue-600 dark:text-blue-400"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path d="M3 12v3c0 1.657 3.134 3 7 3s7-1.343 7-3v-3c0 1.657-3.134 3-7 3s-7-1.343-7-3z" />
                      <path d="M3 7v3c0 1.657 3.134 3 7 3s7-1.343 7-3V7c0 1.657-3.134 3-7 3S3 8.657 3 7z" />
                      <path d="M17 5c0 1.657-3.134 3-7 3S3 6.657 3 5s3.134-3 7-3 7 1.343 7 3z" />
                    </svg>
                  )}
                </div>
                <h3 class="text-lg font-medium text-gray-900 dark:text-white">
                  {category}
                </h3>
              </div>
              <div class="flex flex-wrap gap-2">
                {skills.map((skill) => (
                  <span class="text-sm px-3 py-1.5 rounded-full bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200 hover:bg-blue-100 dark:hover:bg-blue-900/30 hover:text-blue-700 dark:hover:text-blue-300 transition-colors">
                    {skill}
                  </span>
                ))}
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

<!-- Education Section - Modern Timeline -->
<section id="education" class="py-20 bg-gray-50 dark:bg-gray-800/50">
	<div class="max-w-4xl mx-auto px-4">
	  <div class="flex items-center gap-4 mb-12">
		<h2 class="text-2xl font-bold text-gray-900 dark:text-white">
		  Education
		</h2>
		<div class="flex-1 h-px bg-gradient-to-r from-blue-600/30 to-transparent"></div>
	  </div>
  
	  <div class="relative">
		<!-- Timeline line -->
		<div class="absolute left-2 md:left-1/2 w-0.5 h-full bg-blue-100 dark:bg-blue-800/50 transform md:-translate-x-1/2"></div>
  
		<div class="space-y-8 md:space-y-0">
		  {
			educationEntries.map((edu, index) => (
			  <div class="relative md:flex md:odd:justify-start md:even:justify-end group">
				<!-- Timeline dot -->
				<div class="absolute left-0 md:left-1/2 top-6 w-3 h-3 transform -translate-x-1.5 bg-blue-600 dark:bg-blue-400 rounded-full border-2 border-white dark:border-gray-900 z-10"></div>
  
				<!-- Content card -->
				<div class="md:w-[45%] ml-8 md:ml-0 mb-8 transform transition-all duration-300 hover:-translate-y-1">
				  <div class="bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 relative">
					<!-- University icon -->
					<div class="absolute -left-8 top-6 md:left-auto md:-right-8 w-12 h-12 rounded-full bg-blue-600 dark:bg-blue-500 flex items-center justify-center">
					  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
					  </svg>
					</div>
  
					<div class="space-y-2">
					  <h3 class="text-xl font-bold text-gray-900 dark:text-white">
						{edu.data.institution}
					  </h3>
					  <p class="text-blue-600 dark:text-blue-400 font-medium">
						{edu.data.degree}
					  </p>
					  <div class="flex items-center text-sm text-gray-600 dark:text-gray-400">
						<svg class="w-4 h-4 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
						  <path d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"/>
						</svg>
						<span>{edu.data.date}</span>
					  </div>
					  <div class="flex items-center text-sm text-gray-600 dark:text-gray-400">
						<svg class="w-4 h-4 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
						  <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"/>
						</svg>
						<span>{edu.data.location}</span>
					  </div>
					  
					  {edu.data.gpa && (
						<div class="pt-2 mt-2 border-t border-gray-100 dark:border-gray-700">
						  <div class="flex items-center text-sm">
							<span class="px-2 py-1 bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-400 rounded-md">
							  GPA: {edu.data.gpa}
							</span>
						  </div>
						</div>
					  )}
					</div>
				  </div>
				</div>
			  </div>
			))
		  }
		</div>
	  </div>
	</div>
  </section>

  <script is:inline>
    // Theme toggle
    const toggleTheme = () => {
      const isDark = document.documentElement.classList.toggle("dark");
      localStorage.theme = isDark ? "dark" : "light";
    };
    document
      .getElementById("theme-toggle")
      .addEventListener("click", toggleTheme);

    // Set initial theme
    if (
      localStorage.theme === "dark" ||
      (!("theme" in localStorage) &&
        window.matchMedia("(prefers-color-scheme: dark)").matches)
    ) {
      document.documentElement.classList.add("dark");
    }

    // Mobile menu toggle
    const mobileMenuButton = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");

    mobileMenuButton.addEventListener("click", () => {
      mobileMenu.classList.toggle("hidden");
    });

    // Close mobile menu when

    document.addEventListener("click", (event) => {
      if (
        !mobileMenu.contains(event.target) &&
        !mobileMenuButton.contains(event.target)
      ) {
        mobileMenu.classList.add("hidden");
      }
    });
    // Close mobile menu when a link is clicked
    const mobileMenuLinks = mobileMenu.querySelectorAll("a");
    mobileMenuLinks.forEach((link) => {
      link.addEventListener("click", () => {
        mobileMenu.classList.add("hidden");
      });
    });
  </script>
</BaseLayout>
